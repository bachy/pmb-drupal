<?php
// +-------------------------------------------------+
// © 2011-2012 PMB Services / www.sigb.net pmb@sigb.net et contributeurs (voir www.sigb.net)
// +-------------------------------------------------+
// $Id: pmb.module,v 1.13 2011-10-22 08:29:24 arenou Exp $

/* 
Ce logiciel est un programme informatique sous forme d'extension servant 
à exposer les informations du logiciel libre PMB pour le système de 
publication de contenu Drupal. Il permet, notamment, d'intégrer dans Drupal, 
le catalogue des ouvrages et le fichier des lecteurs. Pmbdrupal est 
conforme à la déclaration simplifiée de la CNIL en ce qui concerne le 
respect de la Loi Informatique et Libertés applicable en France.

Ce logiciel est régi par la licence CeCILL soumise au droit français et
respectant les principes de diffusion des logiciels libres. Vous pouvez
utiliser, modifier et/ou redistribuer ce programme sous les conditions
de la licence CeCILL telle que diffusée par le CEA, le CNRS et l'INRIA 
sur le site "http://www.cecill.info" ou dans le fichier Licence_CeCILL_v2.txt 
de ce répertoire.

En contrepartie de l'accessibilité au code source et des droits de copie,
de modification et de redistribution accordés par cette licence, il n'est
offert aux utilisateurs qu'une garantie limitée.  Pour les mêmes raisons,
seule une responsabilité restreinte pèse sur l'auteur du programme,  le
titulaire des droits patrimoniaux et les concédants successifs.

A cet égard  l'attention de l'utilisateur est attirée sur les risques
associés au chargement,  à l'utilisation,  à la modification et/ou au
développement et à la reproduction du logiciel par l'utilisateur étant 
donné sa spécificité de logiciel libre, qui peut le rendre complexe à 
manipuler et qui le réserve donc à des développeurs et des professionnels
avertis possédant  des  connaissances  informatiques approfondies.  Les
utilisateurs sont donc invités à charger  et  tester  l'adéquation  du
logiciel à leurs besoins dans des conditions permettant d'assurer la
sécurité de leurs systèmes et ou de leurs données et, plus généralement, 
à l'utiliser et l'exploiter dans les mêmes conditions de sécurité. 

Le fait que vous puissiez accéder à cet en-tête signifie que vous avez 
pris connaissance de la licence CeCILL, et que vous en avez accepté les
termes.

 */
// +-------------------------------------------------+

include(drupal_get_path('module', 'pmb').'/pmb_admin_pages.inc');
include_once(drupal_get_path('module', 'pmb').'/forms/pmb_search_forms.inc');
require_once(drupal_get_path('module', 'pmb').'/classes/pmb_data.inc');
require_once(drupal_get_path('module', 'pmb').'/pmb_templates.inc');

/**
* Display help and module information
* @param path which path of the site we're displaying help
* @param arg array that holds the current path as would be returned from arg() function
* @return help text for the path
*/
function pmb_help($path, $arg) {
  $output = '';  //declare your output variable
  switch ($path) {
    case "admin/help#pmb":
      $output = '<p>'.  t("This module does not include any help.") .'</p>';
      break;
  }
  return $output;
} 

/**
* Valid permissions for this module
* @return array An array of valid permissions for the onthisdate module
*/
function pmb_perm() {
  return array(
 	'pmb search catalog',
 	'pmb search catalog external',
 	'pmb browse',
 	'pmb browse thesauri',
 	'pmb browse serials',
 	'pmb view notice',
 	'pmb view author',
 	'pmb view collection',
	'pmb view publisher',
	'pmb aggregate search',
 // 	'pmb advanced search'
  );
} 

function pmb_menu() {
  $items = array();

	// settings
  $items['admin/settings/pmb'] = array(
    'title' => 'PMB module settings',
    'description' => t('Configure the PMB module'),
    'page callback' => 'drupal_get_form',
    'page arguments' =>  array('pmb_admin_cache_form'),
    'access arguments' => array('access administration pages'),
    'type' => MENU_NORMAL_ITEM,
  );  
  
	// - - SEARCH - -
	
	$base = array(
		'file' => 'pmb.pages.inc',
	);
	
	// local search
  $items['pmb/search'] = $base+array(
    'title' => 'Search the catalog',
    'description' => t('Search the catalog'),
    'access arguments' => array('pmb search catalog'),
    'page callback' => 'pmb_search_catalog',
    'type' => MENU_NORMAL_ITEM,
  	'menu-name' => t("Quick links"),
  );

	$items['pmb/search/local'] = array(
	  'title' => t('Local catalog'),
	  'description' => t('Search the local catalog'),
	  'type' => MENU_DEFAULT_LOCAL_TASK,
		'weight'=>0,
		'page arguments' => array(3,4,5),
	);

	// external search
	$items['pmb/search/external'] = $base+array(
	  'title' => t('External catalog'),
	  'description' => t('Search the external catalog'),
	  'access arguments' => array('pmb search catalog external'),
	  'page callback' => 'pmb_search_external_catalog',
	  'type' => MENU_LOCAL_TASK,
		'weight'=>1,
		'page arguments' => array(3,4,5,6),
	);
	
	// advanced search
	// $base = array(
	// 	'file' => 'pmb.pages.inc',  
	//   'type' => MENU_LOCAL_TASK,
	// );
	// 
	// $items['pmb/search/advanced'] = $base+array(
	//     'title' => 'Advanced search in the catalog',
	//     'description' => t('Search the catalog'),
	//     'page callback' => 'pmb_advanced_search_catalog',
	//     'access arguments' => array('pmb advanced search'),
	// 	'weight'=>2,
	//   );
	// 
	//   $items['pmb/search/advanced/result'] = $base+array(
	//     'page callback' => 'pmb_advanced_search_result',
	//     'access arguments' => array('pmb advanced search'),
	//   );

  

	// - - BROWSE - -

  $items['pmb/browse'] = $base + array(
    'title' => t('Browse the catalog'),
    'description' => t('Browse the catalog'),
    'page callback' => 'pmb_browse_locations',
    'access arguments' => array('pmb browse'),
    'type' => MENU_NORMAL_ITEM,
  );

	// BROWSE Locations  
  $items['pmb/browse/locations'] = array(
    'title' => t('Locations'),
    'description' => t('Browse the catalog - Locations'),
		'page arguments' => array(3,4,5),
    'type' => MENU_DEFAULT_LOCAL_TASK,
  );
	  
	
	// BROWSE thesauri
	$items['pmb/browse/thesauri'] = $base+array(
	  'title' => t('Thesauri'),
	  'description' => t('Browse the catalog - Thesauri'),
	  'access arguments' => array('pmb browse thesauri'),
	  'type' => MENU_LOCAL_TASK,
	  'page callback' => 'pmb_browse_thesauri',
		'page arguments' => array(3,4),
	);

	$items['pmb/browse/serials'] = $base+array(
    'title' => t('Serials'),
    'description' => t('Browse the catalog - Serials'),
    'page callback' => 'pmb_browse_serials',
    'access arguments' => array('pmb browse serials'),
    'type' => MENU_LOCAL_TASK,
  );

  $items['pmb/browse/shelves'] = $base+array(
    'title' => t('Shelves'),
    'description' => t('Browse the catalog - Shelves'),
    'page callback' => 'pmb_browse_shelves',
    'access arguments' => array('pmb browse'),
    'type' => MENU_LOCAL_TASK,
		'page arguments' => array(3,4),
  );


	// - - VIEW - -
  $items['pmb/view_notice/%'] = $base+array(
    'title' => t('View Record'),
    'description' => t('View a record'),
    'page callback' => 'pmb_view_notice',
	'page arguments' => array(2),   
    'access arguments' => array('pmb view notice'),
    'type' => MENU_CALLBACK,
  ); 

  $items['pmb/view_external_notice/%'] = $base+array(
    'title' => t('View External Notice'),
    'description' => t('View an external notice'),
    'page callback' => 'pmb_view_external_notice',
	'page arguments' => array(2),   
    'access arguments' => array('pmb view notice'),
    'type' => MENU_CALLBACK,
  ); 

  $items['pmb/view_bulletin/%'] = $base+array(
    'title' => t('View Issue'),
    'description' => t('View an issue'),
    'page callback' => 'pmb_view_bulletin',
	'page arguments' => array(2),   
    'access arguments' => array('pmb view notice'),
    'type' => MENU_CALLBACK,
  );
  
  $items['pmb/view_serial/%'] = $base+array(
    'title' => t('View Serial'),
    'description' => t('View a serial'),
    'page callback' => 'pmb_view_serial',
		'page arguments' => array(2,3),   
    'access arguments' => array('pmb view notice'),
    'type' => MENU_CALLBACK,
  );

  $items['pmb/view_author/%'] = $base + array(
    'title' => t('View Author'),
    'description' => t('View an author'),
    'page callback' => 'pmb_view_author',
		'page arguments' => array(2, 3),   
    'access arguments' => array('pmb view author'),
    'type' => MENU_CALLBACK,
  );
  
  $items['pmb/view_publisher/%'] = $base + array(
    'title' => t('View Publisher'),
    'description' => t('View a Publisher'),
    'page callback' => 'pmb_view_publisher',
		'page arguments' => array(2,3),   
    'access arguments' => array('pmb view publisher'),
    'type' => MENU_CALLBACK,
  );
  
  $items['pmb/view_collection/%'] = $base + array(
    'title' => t('View Collection'),
    'description' => t('View a Collection'),
    'page callback' => 'pmb_view_collection',
		'page arguments' => array(2,3),   
    'access arguments' => array('pmb view collection'),
    'type' => MENU_CALLBACK,
  );
  
	$items['pmb/view_subcollection/%'] = $base+array(
    'title' => t('View Subcollection'),
    'description' => t('View a Subcollection'),
    'page callback' => 'pmb_view_subcollection',
		'page arguments' => array(2,3),   
    'access arguments' => array('pmb view collection'),
    'type' => MENU_CALLBACK,
  );

	// AJAX
 	$items['pmb/ajax/get_field'] = $base+array(
    'page callback' => 'pmb_ajax_get_field',
    'access arguments' => array('pmb advanced search'),
	  'type' => MENU_CALLBACK,
  );

	$items["pmb/ajax/block/shelf/%"] = $base+array(
    'page callback' => 'pmb_get_page_shelf_block',
		'page arguments' => array(4,5), 
		'access arguments' => array('pmb view notice'),
	  'type' => MENU_CALLBACK,
	);   

	// debug
	$items['pmb/debug'] = $base+array(
	  'page callback' => 'pmb_debug',
	  'access arguments' => array('pmb advanced search'),
	  'type' => MENU_NORMAL_ITEM, 
	);

 
  return $items;
}


/**
 * Implements hook_theme().
 */
function pmb_theme($existing, $type, $theme, $path) {
  return array(
    'pmb_pager' => array(
      'arguments' => array(
	  		'current_page' => null,
	  		'page_count' => null,
        'tags' => null,
	  		'quantity' => null,
	  		'link_generator_callback' => null
      ),
    ),
    'pmb_notice_view' => array(
      'arguments' => array(
        'notice' => null,
  			'parameters' => null,
      ),
    ),
    'pmb_notice_info' => array(
      'arguments' => array(
        'notice' => null,
  			'info' => null,
      ),
    ),
    'pmb_external_notice_view' => array(
      'arguments' => array(
        'notice' => null,
  			'parameters' => null,
      ),
    ),
    'pmb_serial_view' => array(
      'arguments' => array(
        'notice' => null,
  			'parameters' => null,
      ),
    ),
    'pmb_bulletin_view' => array(
      'arguments' => array(
        'bulletin' => null,
	    	'serial' => null,
	  		'parameters' => null,
      ),
    ),
    'pmb_notice_display' => array(
      'arguments' => array(
        'notice' => null,
	    	'display_type' => null,
	  		'parameters' => null,
      ),
    ),
    'pmb_external_notice_display' => array(
      'arguments' => array(
        'notice' => null,
	    	'display_type' => null,
	  		'parameters' => null,
      ),
    ),
    'pmb_author_view' => array(
      'arguments' => array(
        'author' => null,
  			'parameters' => null,
      ),
    ),
    'pmb_publisher_view' => array(
      'arguments' => array(
        'publisher' => null,
  			'parameters' => null,
      ),
    ),
		'pmb_collection_view' => array(
      'arguments' => array(
        'collection' => null,
	    	'parent_publisher' => null,
	  		'parameters' => null,
      ),
    ),
		'pmb_subcollection_view' => array(
      'arguments' => array(
        'subcollection' => null,
	    	'parent_collection' => null,
	  		'parameters' => null,
      ),
    ),
    'pmb_browse_locations' => array(
      'arguments' => array(
        'locations_and_sections' => null,
  			'parameters' => null,
      ),
    ),    
    'pmb_browse_shelves' => array(
      'arguments' => array(
        'shelves' => null,
  			'parameters' => null,
      ),
    ),    
    'pmb_browse_thesauri' => array(
      'arguments' => array(
        'thesauri' => null,
  			'parameters' => null,
      ),
    ),    
    'pmb_browse_category' => array(
      'arguments' => array(
        'category' => null,
  			'parameters' => null,
      ),
    ),
    'pmb_browse_serials' => array(
      'arguments' => array(
        'serials' => null,
  			'parameters' => null,
      ),
    ),
    'pmb_browse_location' => array(
      'arguments' => array(
        'location' => null,
  			'parameters' => null,
      ),
    ),
    'pmb_browse_section' => array(
      'arguments' => array(
    		'location' => null,
        'section' => null,
	    	'notices' => null,
	  		'parameters' => null,
      ),
    ),
    'pmb_browse_shelf' => array(
      'arguments' => array(
        'shelf' => null,
	    	'notices' => null,
	  		'parameters' => null,
      ),
    ),
    'pmb_shelf_block' => array(
      'arguments' => array(
        'shelf' => null,
  			'parameters' => null
      ),
    ),
    'pmb_search_form' => array(),
    'pmb_search_results' => array(
      'arguments' => array(
    	'search_terms' => null,
    	'search_fields' => null,
    	'notices' => null,
  		'parameters' => null,
      ),
    ),
    'pmb_external_search_results' => array(
      'arguments' => array(
	    	'search_terms' => null,
	    	'search_sources' => null,
	    	'search_fields' => null,
	    	'notices' => null,
	  		'parameters' => null,
      ),
    ),
    'pmb_external_search_form_form' => array(
      'arguments' => array('form' => NULL),
      'file' => drupal_get_path('module', 'pmb').'forms/pmb_search_forms.inc',
    ),
    'pmb_advanced_search_form' => array(),
		'pmb_block_pager' => array(
      'arguments' => array(
	  		'current_page' => null,
	  		'page_count' => null,
        'tags' => null,
	    	'id' => null,
	  		'link_generator_callback' => null
      ),
    ),
  );	
}

/**
 * Implements hook_block().
 */
function pmb_block($op = 'list', $delta = 0, $edit = array()) {
  switch ($op) {

    case 'list':
	    $blocks['search'] = array(
	    	'info' => t('Search the catalog'),
	    	'cache' => BLOCK_NO_CACHE,
	    );
  
			$pmb_data = new pmb_data();
			if (isset($GLOBALS["user"]->uid) && isset($GLOBALS["user"]->pmb_credentials))
				$pmb_data->set_user($GLOBALS["user"]);
	
			$shelves = $pmb_data->get_shelves();
			if ($shelves) {
				foreach($shelves as $ashelf) {
			    $blocks['shelf_'.$ashelf->id] = array(
			    	'info' => t('Shelf').": ".$ashelf->name,
			    	'cache' => BLOCK_CACHE_PER_USER,
			    );			
				}
			}    
  		
			$blocks['pmb_powered'] = array(
				'info' => t('Powered by PMB')
			);


	    return $blocks;

    case 'configure':
      // if ($delta == 0 && user_access('administer module')) {
      //   $form['module_block_1'] = array();
      // }
      // if ($delta == 1 && user_access('administer module')) {
      //   $form['module_block_2'] = array();
      // }
      // return $form;

    case 'save':
      // if ($delta == 0) {
      //   variable_set('module_block_setting_1', $edit['module_block_1']);
      // }
      // if ($delta == 1) {
      //   variable_set('module_block_setting_2', $edit['module_block_2']);
      // }
      break;

    case 'view':
			if($delta == 'pmb_powered'){
				return array(
					'subject' => null,
					'content' => t('powered by !link', array("!link"=>l('Pmb Services', 'http://www.pmbservices.fr'))),
				);
				
			}else if($delta == 'search') {
	      
				if (arg(0) == 'pmb' && arg(1) == 'search')
	     		return;
	
	   		if (user_access('pmb search catalog', $GLOBALS["user"]))
					return array(
						'subject' => t('Search the catalog'),
						'content' => drupal_get_form('pmb_search_form_block_form'),
					);
				
				return array(
					'subject' => t('Search the catalog'),
					'content' => 'You do not have the permissions to search the catalog',
				);
				
	    }else if( substr($delta, 0, 6) == 'shelf_' ){

	    	$shelf_id = substr($delta, 6);

				if (!$shelf_id)
					return;

				$pmb_data = new pmb_data();
				if (isset($GLOBALS["user"]->uid) && isset($GLOBALS["user"]->pmb_credentials))
					$pmb_data->set_user($GLOBALS["user"]);

				$shelves = $pmb_data->get_shelves();
	    	$shelf = array();

				foreach($shelves as $ashelf)
					if ($ashelf->id == $shelf_id) {
						$shelf = $ashelf;
						break;
					}

				if(!isset($shelf))
					return t('Shelf not found!');

	    	return array(
					'subject' => t('Shelf').': '.$shelf->name,
					'content' => theme('pmb_shelf_block', $shelf, array())
	    	);
	    }
  }    
}

/**
 * Implements hook_search().
 */
function pmb_search($op='search',$search_terms=NULL){
	if(user_access("pmb aggregate search")){
		switch($op){
		case "name" :
			$result = t("Catalog");
			break;
		case "admin" :
			$result = array();	
			break;
		case "search" :
			$result = pmb_search_aggregate($search_terms);
			break; 
		}
		return $result;
	}
}

function pmb_flush_caches() {
  return array('pmb_cache');
}



